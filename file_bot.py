import telebot
import config
import random
import datetime

from DOLLAR import Dollar
from Hryvnia import Hryvnia
from Euro import Euro

from telebot import types

bot = telebot.TeleBot(config.TOKEN)
dollar_currency = Dollar()
hryvnia_currency = Hryvnia()
euro_currency = Euro()


@bot.message_handler(commands=["help"])
def help(message):
    bot.send_message(message.chat.id, config.RULES)


@bot.message_handler(commands=['start'])
def welcome(message):
    #add begin picture
    sti = open('data/img/wolf_1.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup_1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
    item3 = types.KeyboardButton("–ü–†–ê–í–ò–õ–ê")

    markup_1.add(item1, item2, item3)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –≤—ã—Å—Ç—É–ø–∞–µ—Ç –≤ —Ü–∏—Ä–∫–µ.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup_1)


@bot.message_handler(commands=['currency'])
def currency(message):
    img_currency = open("data/img/money.webp", 'rb')
    bot.send_sticker(message.chat.id, img_currency)

    markup_2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item_1 = types.KeyboardButton("Dollars")
    item_2 = types.KeyboardButton("Hryvnia")
    item_3 = types.KeyboardButton("Euro")

    markup_2.add(item_1, item_2, item_3)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –ª—é–±—É—é –≤–∞–ª—é—Ç—É..", parse_mode='html', reply_markup=markup_2)


@bot.message_handler(commands=['time'])
def time(message):
    bot.send_message(message.chat.id, datetime.datetime.now().time())


@bot.message_handler(commands=['date'])
def date(message):
    bot.send_message(message.chat.id, datetime.datetime.now().date())


@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))
        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        elif message.text == "–ü–†–ê–í–ò–õ–ê":
            bot.send_message(message.chat.id, config.RULES)
        elif message.text == "Dollars":
            bot.send_message(message.chat.id,
                             "–°–µ–π—á–∞—Å –∫—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ –†—É–±–ª—é: {}".format(dollar_currency.get_currency_price()))
        elif message.text == "Hryvnia":
            bot.send_message(message.chat.id,
                             "–°–µ–π—á–∞—Å –∫—É—Ä—Å –ì—Ä–∏–≤–Ω—ã –∫ –†—É–±–ª—é: {}".format(hryvnia_currency.get_currency_price()))
        elif message.text == "Euro":
            bot.send_message(message.chat.id,
                             "–°–µ–π—á–∞—Å –∫—É—Ä—Å –ï–≤—Ä–æ –∫ –†—É–±–ª—é: {}".format(euro_currency.get_currency_price()))
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                                  reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

    except Exception as e:
        print(repr(e))


# RUN
if __name__ == '__main__':
    bot.polling(none_stop=True)